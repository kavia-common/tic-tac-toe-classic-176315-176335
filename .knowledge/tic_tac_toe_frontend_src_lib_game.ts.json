{"is_source_file": true, "format": "TypeScript", "description": "This file contains core game logic functions for a Tic-Tac-Toe game, including line definitions, winner checking, draw detection, empty cell identification, and player toggling.", "external_files": ["../types"], "external_methods": [], "published": ["LINES", "getEmptyIndices", "checkWinner", "isDraw", "nextPlayer"], "classes": [], "methods": [{"name": "export function getEmptyIndices(board: BoardState): number[] { getEmptyIndices", "description": "Returns the list of indices in the board that are empty.", "scope": "", "scopeKind": ""}, {"name": "export function checkWinner(board: BoardState): { player: Player; line: number[] } | null { checkWinner", "description": "Checks the current board for a winner. Returns an object with the winning player and line, or null if no winner.", "scope": "", "scopeKind": ""}, {"name": "export function isDraw(board: BoardState): boolean { isDraw", "description": "Determines if the game is a draw by checking if the board is full and there is no winner.", "scope": "", "scopeKind": ""}, {"name": "export function nextPlayer(p: Player): Player { nextPlayer", "description": "Switches the current player between 'X' and 'O'.", "scope": "", "scopeKind": ""}], "calls": ["getEmptyIndices(board)", "checkWinner(board)", "getEmptyIndices(board)", "checkWinner(board)"], "search-terms": ["tic-tac-toe logic", "game board analysis", "winner detection", "draw condition", "player toggle"], "state": 2, "file_id": 18, "knowledge_revision": 39, "git_revision": "", "ctags": [{"_type": "tag", "name": "LINES", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^export const LINES: number[][] = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^    const [a,b,c] = line;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^    const [a,b,c] = line;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^    const [a,b,c] = line;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "checkWinner", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^export function checkWinner(board: BoardState): { player: Player; line: number[] } | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getEmptyIndices", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^export function getEmptyIndices(board: BoardState): number[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isDraw", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^export function isDraw(board: BoardState): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "line", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^  for (const line of LINES) {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "nextPlayer", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^export function nextPlayer(p: Player): Player {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-176315-176335/tic_tac_toe_frontend/src/lib/game.ts", "pattern": "/^  const res: number[] = [];$/", "language": "TypeScript", "kind": "constant", "scope": "getEmptyIndices", "scopeKind": "function"}], "hash": "a623627188ada3ed18f14d9c2a2ac7a3", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/lib/game.ts", "revision_history": [{"39": ""}]}